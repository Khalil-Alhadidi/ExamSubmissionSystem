version: '3.8'

services:
  examservice.api:
    container_name: examservice.api
    build:
      context: .
      dockerfile: ExamService/ExamService.API/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__ExamServiceDbConnection=Server=examdb,1433;Database=ExamServiceDb;User=sa;Password=Admin@1234;TrustServerCertificate=True;
    restart: on-failure
    depends_on:
      - examdb

  examdb:
    container_name: examservice.mssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Admin@1234"
      MSQLL_PID: "Express"
      ACCEPT_EULA: "Y"
    ports:
      - "11433:1433"
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P Admin@1234 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - examdata:/var/opt/mssql

  submissionservice.api:
    container_name: submissionservice.api
    build:
      context: .
      dockerfile: SubmissionService/SubmissionService.API/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - ConnectionStrings__SubmissionServiceDbConnection=Server=submissiondb,1433;Database=SubmissionServiceDb;User=sa;Password=Admin@1234;TrustServerCertificate=True;
    restart: on-failure
    depends_on:
      - submissiondb

  submissiondb:
    container_name: submissionservice.mssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Admin@1234"
      MSQLL_PID: "Express"
      ACCEPT_EULA: "Y"
    ports:
      - "21433:1433"
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P Admin@1234 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - submissiondata:/var/opt/mssql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: Admin@1234
    restart: on-failure
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq

  notificationservice.api:
    container_name: notificationservice.api
    build:
      context: .
      dockerfile: NotificationService/NotificationService.API/Dockerfile
    ports:
      - "8082:8080"
    restart: on-failure

volumes:
  examdata:
  submissiondata:
  rabbitmqdata:

networks:
  default:
    name: microgama-net
